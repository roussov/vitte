###############################################################################
# Vitte â€” .gitattributes (ultra complet)
# LisibilitÃ©, portabilitÃ©, paix des merges.
###############################################################################

# â”€â”€ Normalisation par dÃ©faut (texte auto, LF partout) â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
*               text=auto eol=lf

# Optionnel (si tout le monde est en UTF-8 cÃ´tÃ© travail) :
# *             working-tree-encoding=UTF-8

# â”€â”€ Scripts Windows qui prÃ©fÃ¨rent CRLF (si tu veux prÃ©server les conventions) â”€
*.bat           eol=crlf
*.cmd           eol=crlf
# PowerShell gÃ¨re LF, gardons lâ€™uniformitÃ©
*.ps1           eol=lf

# â”€â”€ Textuels explicites (on verrouille LF) â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
*.rs            text eol=lf
*.toml          text eol=lf
*.lock          text eol=lf
*.md            text eol=lf
*.mdx           text eol=lf
*.txt           text eol=lf
*.json          text eol=lf
*.yaml          text eol=lf
*.yml           text eol=lf
*.graphql       text eol=lf
*.gql           text eol=lf
*.proto         text eol=lf
*.sh            text eol=lf
*.zsh           text eol=lf
*.fish          text eol=lf
*.nu            text eol=lf
*.elv           text eol=lf
*.py            text eol=lf
*.js            text eol=lf
*.ts            text eol=lf
*.tsx           text eol=lf
Makefile        text eol=lf
Dockerfile      text eol=lf
.gitignore      text eol=lf
.gitattributes  text eol=lf
.editorconfig   text eol=lf
.rustfmt.toml   text eol=lf
.clippy.toml    text eol=lf
.deny.toml      text eol=lf
rust-toolchain* text eol=lf

# â”€â”€ Lockfiles : Ã©viter les guerres de merge, on rÃ©sout aprÃ¨s avec lâ€™outil â”€â”€â”€â”€
Cargo.lock          text eol=lf merge=ours
package-lock.json   text eol=lf merge=ours
pnpm-lock.yaml      text eol=lf merge=ours
yarn.lock           text eol=lf merge=ours

# â”€â”€ Binaires : pas de diff ni de merge texte â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
*.png           -text -diff
*.jpg           -text -diff
*.jpeg          -text -diff
*.gif           -text -diff
*.webp          -text -diff
# SVG reste texte (utile pour diff)
*.svg           text
*.pdf           -text -diff
*.zip           -text -diff
*.tar           -text -diff
*.gz            -text -diff
*.bz2           -text -diff
*.xz            -text -diff
*.zst           -text -diff
*.7z            -text -diff
*.rar           -text -diff
*.dmg           -text -diff
*.iso           -text -diff

*.wasm          -text -diff
*.bin           -text -diff
*.exe           -text -diff
*.dll           -text -diff
*.so            -text -diff
*.dylib         -text -diff
*.a             -text -diff
*.lib           -text -diff
*.obj           -text -diff
*.o             -text -diff
*.class         -text -diff

# Fonts
*.ttf           -text -diff
*.otf           -text -diff
*.woff          -text -diff
*.woff2         -text -diff

# Audio/vidÃ©o
*.mp3           -text -diff
*.wav           -text -diff
*.flac          -text -diff
*.mp4           -text -diff
*.mov           -text -diff
*.webm          -text -diff

# â”€â”€ GitHub Linguist : stats propres, docs reconnues, gÃ©nÃ©rÃ©s masquÃ©s â”€â”€â”€â”€â”€â”€â”€â”€â”€
# Documentation
docs/**                 linguist-documentation
**/*.md                 linguist-documentation

# ðŸ‘‰ Coloration Vitte sur GitHub : mappe .vit & .vitte vers Rust (highlight fiable)
*.vit                   linguist-language=Rust
*.vitte                 linguist-language=Rust

# Code gÃ©nÃ©rÃ© (ne fausse pas les stats)
crates/**/pkg/**        linguist-generated
coverage/**             linguist-generated
**/snapshots/**         linguist-generated
fuzz/**/artifacts/**    linguist-generated
fuzz/**/coverage/**     linguist-generated
target/**               linguist-generated
dist/**                 linguist-generated
build/**                linguist-generated

# DÃ©pendances vendored (si tu en as un jour)
third_party/**          linguist-vendored
vendor/**               linguist-vendored

# Forcer la dÃ©tection : templates/embeds Rust dÃ©guisÃ©s
*.rs.in                 linguist-language=Rust
*.rs.txt                linguist-language=Rust

# â”€â”€ Export-ignore : fichiers non pertinents dans `git archive` / releases â”€â”€â”€â”€
.github/                export-ignore
.gitignore              export-ignore
.gitattributes          export-ignore
.vscode/                export-ignore
fuzz/**/artifacts/**    export-ignore
fuzz/**/coverage/**     export-ignore
fuzz/**/build/**        export-ignore
**/target/**            export-ignore
**/*.profraw            export-ignore
**/*.profdata           export-ignore
coverage/**             export-ignore
scripts/**              export-ignore
tests/**                export-ignore
examples/**             export-ignore
# DÃ©sactive si tu veux fournir le lockfile dans la release src
Cargo.lock              export-ignore
package-lock.json       export-ignore

# â”€â”€ (Optionnel) LFS : dÃ©commente si tu actives Git-LFS sur de gros binaires â”€â”€
# *.zip           filter=lfs diff=lfs merge=lfs -text
# *.7z            filter=lfs diff=lfs merge=lfs -text
# *.mp4           filter=lfs diff=lfs merge=lfs -text
# *.wasm          filter=lfs diff=lfs merge=lfs -text
# *.exe           filter=lfs diff=lfs merge=lfs -text
# *.dll           filter=lfs diff=lfs merge=lfs -text
# *.so            filter=lfs diff=lfs merge=lfs -text
# *.dylib         filter=lfs diff=lfs merge=lfs -text
# *.ttf           filter=lfs diff=lfs merge=lfs -text
# *.otf           filter=lfs diff=lfs merge=lfs -text
# *.woff          filter=lfs diff=lfs merge=lfs -text
# *.woff2         filter=lfs diff=lfs merge=lfs -text
