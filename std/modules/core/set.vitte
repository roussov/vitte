//! set â€” ensemble
struct Set<T> { __raw: __intrinsics::Set }

export fn new<T>() -> Set<T> { Set{ __raw: __intrinsics::set_new() } }
export fn insert<T>(mut s: Set<T>, v: T) -> bool { __intrinsics::set_insert(s.__raw, v) }
export fn contains<T>(s: Set<T>, v: T) -> bool { __intrinsics::set_contains(s.__raw, v) }
export fn remove<T>(mut s: Set<T>, v: T) -> bool { __intrinsics::set_remove(s.__raw, v) }
