//! ring_buffer â€” tampon circulaire
struct Ring<T> { __raw: __intrinsics::Ring }
export fn with_capacity<T>(cap: i32) -> Ring<T> { Ring{ __raw: __intrinsics::ring_new(cap) } }
export fn push<T>(mut r: Ring<T>, v: T) { __intrinsics::ring_push(r.__raw, v) }
export fn pop<T>(mut r: Ring<T>) -> Option<T> { __intrinsics::ring_pop(r.__raw) }
