//! heap â€” tas binaire min
struct Heap<T> { __raw: __intrinsics::Heap }
export fn new<T>() -> Heap<T> { Heap{ __raw: __intrinsics::heap_new() } }
export fn push<T>(mut h: Heap<T>, v: T) { __intrinsics::heap_push(h.__raw, v) }
export fn pop<T>(mut h: Heap<T>) -> Option<T> { __intrinsics::heap_pop(h.__raw) }
