# Cargo.toml — MANIFESTE RACINE (workspace) — généré **sans** "citte"
# - Virtual workspace (pas de [package] ici)
# - Membres, profils, lints, deps communes, patches.
# - Compatible Rust 1.80+.

[workspace]
resolver = "2"
members = [
  "crates/vitte-cli",
  "crates/vitte-compiler",
  "crates/vitte-core",
  "crates/vitte-runtime",
  "crates/stdlib",
  "crates/vitte-tools",
  "crates/vitte-vm",
]
exclude = [
  ".github",
  "tools",
  "modules",
  "desktop",
  "hello",
  "hello-vitte",
  "embedded-blink",
  "kernel",
  "web-echo",
  "worker-jobs",
  "wasm-add",
]

[workspace.package]
edition      = "2021"
rust-version = "1.80"
license      = "MIT OR Apache-2.0"
authors      = ["Vincent <you@example.com>"]
homepage     = "https://example.com/vitte"
repository   = "https://example.com/vitte/repo"
documentation= "https://docs.example.com/vitte"
readme       = "README.md"
keywords     = ["kernel", "embedded", "wasm", "cli", "vitte"]
categories   = ["embedded", "os::kernel", "command-line-utilities", "web-programming::http-server"]
description  = "Monorepo poly-cible (desktop, kernel, embedded, WASM) — fidèle aux traditions, affûté pour la prod."

[workspace.dependencies]
# Base
anyhow = "1"
thiserror = "1"
rand = "0.8"
once_cell = "1"
parking_lot = "0.12"
bytes = "1"
base64 = "0.22"

# Logs / observabilité
log = "0.4"
env_logger = { version = "0.11", default-features = false }
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter", "fmt"] }

# (Dé)Sérialisation
serde = { version = "1", features = ["derive"] }
serde_json = "1"
toml = "0.8"

# CLI
clap = { version = "4.5", features = ["derive"] }
humantime = "2"

# Réseau
tokio = { version = "1.39", features = ["rt-multi-thread", "macros", "net", "io-util", "time", "signal"] }
hyper = { version = "1", features = ["server", "http1"] }
reqwest = { version = "0.12", default-features = false, features = ["rustls-tls"] }

# WASM (déclaré non-optionnel au workspace — gérer l’optionnalité dans les crates)
wasm-bindgen = { version = "0.2" }

# FFI / Build C (déclaré ici, optionnalité dans les crates via features)
cc = "1"
bindgen = { version = "0.70" }

# Tests / outils (optionnalité gérée par crate)
proptest = { version = "1" }

[workspace.lints.rust]
unsafe_code = "forbid"
unused_extern_crates = "warn"
unused_imports = "warn"
dead_code = "warn"
missing_docs = "allow"

[workspace.lints.clippy]
all = "warn"
pedantic = "warn"
nursery = "warn"
cargo = "warn"
module_name_repetitions = "allow"
too_long_first_doc_paragraph = "allow"

[profile.dev]
opt-level = 0
debug = true
debug-assertions = true
overflow-checks = true
lto = "off"
codegen-units = 256
incremental = true

[profile.release]
opt-level = 3
debug = 1
lto = "thin"
codegen-units = 1
strip = "symbols"
panic = "unwind"
incremental = false

[profile.profiling]
inherits = "release"
debug = true
lto = "off"
strip = "none"

[patch.crates-io]
# hyper = { git = "https://github.com/YourOrg/hyper", rev = "deadbeef" }

[workspace.metadata]
scripts.lint = "cargo fmt --all -- --check && cargo clippy --all-targets --all-features -- -D warnings"
scripts.deny = "cargo deny check -A unlicensed -A sources"
scripts.test = "cargo test --all --all-features"

[workspace.metadata.docs.rs]
all-features = true
default-target = "x86_64-unknown-linux-gnu"
targets = ["x86_64-unknown-linux-gnu", "wasm32-unknown-unknown"]

[workspace.metadata.release]
sign-commit = true
sign-tag = true
push = true
tag-prefix = "v"

