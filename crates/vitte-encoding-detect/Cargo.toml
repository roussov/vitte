[package]
name        = "vitte-encoding-detect"
description = "vitte-encoding-detect — détection d’encodage (BOM, heuristique chardetng) pour Vitte."
version      = { workspace = true }
edition      = { workspace = true }
rust-version = { workspace = true }
license      = { workspace = true }
repository   = { workspace = true }
homepage     = { workspace = true }
readme       = { workspace = true }

keywords   = ["encoding", "charset", "detect", "chardetng", "bom"]
categories = ["text-processing", "internationalization", "encoding"]

[lib]
name = "vitte_encoding_detect"
path = "src/lib.rs"

[features]
default = ["std", "errors", "chardetng"]

std = []
alloc-only = []

serde   = ["dep:serde"]
errors  = ["dep:thiserror"]

# Heuristique via chardetng
chardetng = ["dep:chardetng"]

[dependencies]
serde     = { workspace = true, optional = true, default-features = false, features = ["derive"] }
thiserror = { workspace = true, optional = true }
chardetng = { version = "0.1", optional = true }

# Interne : réutilise définitions d’encodages de vitte-encoding
vitte-encoding = { path = "../vitte-encoding", version = "0.1.0" }

[dev-dependencies]
pretty_assertions = { workspace = true }

[package.metadata.docs.rs]
all-features        = false
features            = ["std", "errors", "chardetng", "serde"]
no-default-features = false
rustdoc-args        = ["--cfg", "docsrs"]

[lints.rust]
unsafe_code = "forbid"

[lints.clippy]
all                      = "warn"
pedantic                 = "warn"
nursery                  = "warn"
module_name_repetitions  = "allow"
doc_markdown             = "allow"
too_many_lines           = "allow"