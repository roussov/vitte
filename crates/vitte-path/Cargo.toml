[package]
name        = "vitte-path"
description = "vitte-path — utilitaires de chemins multiplateforme: normalisation, résolution, UTF-8, glob, home/temp, liens symboliques, inspection FS."
version      = { workspace = true }
edition      = { workspace = true }
rust-version = { workspace = true }
license      = { workspace = true }
repository   = { workspace = true }
homepage     = { workspace = true }
readme       = { workspace = true }

keywords   = ["path", "filesystem", "glob", "utf8", "vitte"]
categories = ["filesystem", "development-tools"]

[lib]
name = "vitte_path"
path = "src/lib.rs"

[features]
default     = ["std", "errors", "utf8", "normalize", "home", "temp", "glob"]
std         = []
alloc-only  = []

serde   = ["dep:serde"]
errors  = ["dep:thiserror"]

# Modules optionnels
utf8       = ["dep:camino"]          # PathBuf UTF-8 friendly
normalize  = ["dep:path-clean", "dep:dunce"]  # canonique/UNC→dos
glob       = ["dep:globset", "dep:ignore"]    # glob + .gitignore
home       = ["dep:home"]            # ~ utilisateur
temp       = ["dep:tempfile"]        # répertoires/fichiers temporaires
casefold   = ["dep:unicase"]         # comparaison insensible à la casse
symlink    = []                      # helpers symlink (std)
watch      = ["dep:notify"]          # watcher FS (facultatif)
percent-enc = ["dep:percent-encoding"] # file:// et encodage URL

[dependencies]
serde              = { workspace = true, optional = true, default-features = false, features = ["derive"] }
thiserror          = { workspace = true, optional = true }
walkdir = "2.5"

# externes optionnels
camino             = { version = "1", optional = true }        # Utf8Path/Buf
path-clean         = { version = "1", optional = true }
dunce              = { version = "1", optional = true }        # fix UNC on Windows
globset            = { version = "0.4", optional = true }
ignore             = { version = "0.4", optional = true }      # .gitignore aware
home               = { version = "0.5", optional = true }
tempfile           = { version = "3", optional = true }
unicase            = { version = "2", optional = true }
notify             = { version = "6", optional = true, default-features = false, features = ["macos_kqueue"] }
percent-encoding   = { version = "2", optional = true }

[dev-dependencies]
pretty_assertions = { workspace = true }
tempfile          = "3"
globset           = "0.4"
ignore            = "0.4"

[package.metadata.docs.rs]
all-features        = false
features            = ["std", "errors", "utf8", "normalize", "glob", "home", "temp", "casefold", "percent-enc"]
no-default-features = false
rustdoc-args        = ["--cfg", "docsrs"]

[lints.rust]
unsafe_code = "forbid"

[lints.clippy]
all                      = "warn"
pedantic                 = "warn"
nursery                  = "warn"
module_name_repetitions  = "allow"
doc_markdown             = "allow"
too_many_lines           = "allow"