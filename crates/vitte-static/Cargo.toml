

[package]
name        = "vitte-static"
description = "Gestion d’actifs statiques pour Vitte : embedding (Rust-Embed/include_dir), chargement à chaud, MIME, intégration HTTP."
version      = { workspace = true }
edition      = { workspace = true }
rust-version = { workspace = true }
license      = { workspace = true }
repository   = { workspace = true }
homepage     = { workspace = true }
readme       = "README.md"
documentation = "https://docs.rs/vitte-static"

keywords   = ["static", "assets", "embed", "http", "mime"]
categories = ["filesystem", "web-programming", "development-tools"]

[lib]
name = "vitte_static"
path = "src/lib.rs"

[features]
# Par défaut: std + table MIME
default     = ["std", "mime"]
std         = []
# Embedding des fichiers (choisir un backend)
embed       = ["dep:rust-embed"]
include-dir = ["dep:include_dir"]
# Intégrations HTTP optionnelles
axum        = ["dep:axum", "dep:tower", "dep:http"]
hyper       = ["dep:hyper", "dep:http"]
# Table MIME
mime        = ["dep:mime_guess"]
# Sérialisation de manifestes
serde       = ["dep:serde", "dep:serde_json"]

[dependencies]
thiserror   = "1.0"
cfg-if      = "1.0"
bytes       = "1"
http        = { version = "1", optional = true }
axum        = { version = "0.7", optional = true }
hyper       = { version = "1", optional = true }
tower       = { version = "0.5", optional = true }
# Embedding backends
rust-embed  = { version = "8", optional = true, default-features = false, features = ["debug-embed"] }
include_dir = { version = "0.7", optional = true }
# MIME
mime_guess  = { version = "2", optional = true }
# JSON
serde       = { version = "1", features = ["derive"], optional = true }
serde_json  = { version = "1", optional = true }

[dev-dependencies]
pretty_assertions = "1.4"
axum   = { version = "0.7", features = ["macros"] }
http   = "1"

[package.metadata.docs.rs]
all-features        = false
features            = ["std", "mime", "embed", "include-dir", "axum", "hyper", "serde"]
no-default-features = false
rustdoc-args        = ["--cfg", "docsrs"]

[lints.rust]
unsafe_code = "forbid"

[lints.clippy]
all      = "warn"
pedantic = "warn"