

[package]
name        = "vitte-remote-cache"
description = "Cache distant pour Vitte : backend HTTP/S3/Redis, TTL, compression, clés de contenu, intégration build."
version      = { workspace = true }
edition      = { workspace = true }
rust-version = { workspace = true }
license      = { workspace = true }
repository   = { workspace = true }
homepage     = { workspace = true }
readme       = "README.md"
documentation = "https://docs.rs/vitte-remote-cache"

keywords   = ["cache", "remote", "s3", "redis", "http"]
categories = ["caching", "asynchronous", "development-tools"]

[lib]
name = "vitte_remote_cache"
path = "src/lib.rs"

[features]
# Par défaut: std + http + compression
default = ["std", "http", "zstd"]
std     = []
# Backends
http    = ["dep:reqwest"]
s3      = ["dep:aws-config", "dep:aws-sdk-s3"]
redis   = ["dep:redis"]
# Compression
zstd    = ["dep:zstd"]
# Sérialisation
serde   = ["dep:serde", "dep:serde_json"]
# Runtime tokio
rt-tokio = ["dep:tokio"]

[dependencies]
thiserror = "1.0"
cfg-if    = "1.0"
sha2      = "0.10"
base64    = "0.22"
bytes     = "1"

# HTTP
reqwest   = { version = "0.12", optional = true, default-features = false, features = ["rustls-tls", "http2"] }

# AWS S3
aws-config = { version = "1", optional = true }
aws-sdk-s3 = { version = "1", optional = true }

# Redis
redis     = { version = "0.25", optional = true, features = ["tokio-comp"] }

# Compression
zstd      = { version = "0.13", optional = true }

# JSON
serde      = { version = "1", features = ["derive"], optional = true }
serde_json = { version = "1", optional = true }

# Runtime
tokio      = { version = "1.39", optional = true, default-features = false, features = ["rt", "rt-multi-thread", "macros", "time", "fs", "sync"] }

[dev-dependencies]
pretty_assertions = "1.4"
tokio = { version = "1.39", features = ["rt", "rt-multi-thread", "macros", "time"] }
httpmock = "0.7"

[package.metadata.docs.rs]
all-features        = false
features            = ["std", "http", "serde"]
no-default-features = false
rustdoc-args        = ["--cfg", "docsrs"]

[lints.rust]
unsafe_code = "forbid"

[lints.clippy]
all      = "warn"
pedantic = "warn"